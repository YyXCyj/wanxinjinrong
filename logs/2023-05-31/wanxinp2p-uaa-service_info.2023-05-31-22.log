[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:04:45,097 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: uaa-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:04:46,123 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: uaa-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://10.18.35.163:8080/configs/uaa-service/DEFAULT/micro_service.spring-cloud-feign?ip=10.18.35.163&messages=%7B%22details%22%3A%7B%22uaa-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A313%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: uaa-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:04:58,716 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:09:45,109 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: uaa-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:09:46,128 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: uaa-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://10.18.35.163:8080/configs/uaa-service/DEFAULT/micro_service.spring-cloud-feign?ip=10.18.35.163&messages=%7B%22details%22%3A%7B%22uaa-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A313%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: uaa-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:09:58,726 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:14:45,098 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: uaa-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:14:46,177 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: uaa-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://10.18.35.163:8080/configs/uaa-service/DEFAULT/micro_service.spring-cloud-feign?ip=10.18.35.163&messages=%7B%22details%22%3A%7B%22uaa-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A313%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: uaa-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:14:58,730 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:19:45,097 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: uaa-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:19:46,122 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: uaa-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://10.18.35.163:8080/configs/uaa-service/DEFAULT/micro_service.spring-cloud-feign?ip=10.18.35.163&messages=%7B%22details%22%3A%7B%22uaa-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A313%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: uaa-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:19:58,734 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:24:45,207 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: uaa-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:24:46,226 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: uaa-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://10.18.35.163:8080/configs/uaa-service/DEFAULT/micro_service.spring-cloud-feign?ip=10.18.35.163&messages=%7B%22details%22%3A%7B%22uaa-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A313%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: uaa-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:24:58,745 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:27:26,610 INFO [DiscoveryClient-HeartbeatExecutor-0][DiscoveryClient.java:850] - DiscoveryClient_UAA-SERVICE/uaa-service:10.18.35.163:53020 - Re-registering apps/UAA-SERVICE
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:27:26,612 INFO [DiscoveryClient-HeartbeatExecutor-0][DiscoveryClient.java:826] - DiscoveryClient_UAA-SERVICE/uaa-service:10.18.35.163:53020: registering service...
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:27:26,737 INFO [DiscoveryClient-HeartbeatExecutor-0][DiscoveryClient.java:835] - DiscoveryClient_UAA-SERVICE/uaa-service:10.18.35.163:53020 - registration status: 204
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:29:45,091 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: uaa-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:29:46,120 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: uaa-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://10.18.35.163:8080/configs/uaa-service/DEFAULT/micro_service.spring-cloud-feign?ip=10.18.35.163&messages=%7B%22details%22%3A%7B%22uaa-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A313%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: uaa-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:29:58,748 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:34:45,095 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: uaa-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:34:46,117 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: uaa-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://10.18.35.163:8080/configs/uaa-service/DEFAULT/micro_service.spring-cloud-feign?ip=10.18.35.163&messages=%7B%22details%22%3A%7B%22uaa-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A313%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: uaa-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:34:58,762 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:39:45,101 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: uaa-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:39:46,106 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: uaa-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://10.18.35.163:8080/configs/uaa-service/DEFAULT/micro_service.spring-cloud-feign?ip=10.18.35.163&messages=%7B%22details%22%3A%7B%22uaa-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A313%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: uaa-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:39:58,777 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:44:45,096 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: uaa-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:44:46,120 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: uaa-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://10.18.35.163:8080/configs/uaa-service/DEFAULT/micro_service.spring-cloud-feign?ip=10.18.35.163&messages=%7B%22details%22%3A%7B%22uaa-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A313%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: uaa-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:44:58,779 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:02,021 INFO [Thread-93][PollingServerListUpdater.java:53] - Shutting down the Executor Pool for PollingServerListUpdater
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:02,632 INFO [Thread-77][EurekaServiceRegistry.java:65] - Unregistering application UAA-SERVICE with eureka with status DOWN
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:02,634 WARN [Thread-77][DiscoveryClient.java:1303] - Saw local status change event StatusChangeEvent [timestamp=1685544362634, current=DOWN, previous=UP]
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:02,637 INFO [DiscoveryClient-InstanceInfoReplicator-0][DiscoveryClient.java:826] - DiscoveryClient_UAA-SERVICE/uaa-service:10.18.35.163:53020: registering service...
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:02,659 INFO [DiscoveryClient-InstanceInfoReplicator-0][DiscoveryClient.java:835] - DiscoveryClient_UAA-SERVICE/uaa-service:10.18.35.163:53020 - registration status: 204
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:02,831 INFO [Thread-77][ShutdownEnabledTimer.java:67] - Shutdown hook removed for: NFLoadBalancer-PingTimer-account-service
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:02,833 INFO [Thread-77][ShutdownEnabledTimer.java:72] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1055)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1062)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:975)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:79)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:256)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1055)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1062)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:945)
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:03,284 INFO [Thread-77][ExecutorConfigurationSupport.java:208] - Shutting down ExecutorService 'applicationTaskExecutor'
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:05,452 INFO [Thread-77][DruidDataSource.java:1885] - {dataSource-1} closing ...
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:05,538 INFO [Thread-77][DruidDataSource.java:1955] - {dataSource-1} closed
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:05,772 INFO [Thread-77][DiscoveryClient.java:888] - Shutting down DiscoveryClient ...
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:08,785 INFO [Thread-77][DiscoveryClient.java:922] - Unregistering ...
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:08,880 INFO [Thread-77][DiscoveryClient.java:924] - DiscoveryClient_UAA-SERVICE/uaa-service:10.18.35.163:53020 - deregister  status: 200
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:09,046 INFO [Thread-77][DiscoveryClient.java:911] - Completed shut down of DiscoveryClient
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:19,408 INFO [main][DefaultApplicationProvider.java:85] - App ID is set to uaa-service by app.id property from System Property
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:19,414 INFO [main][DefaultServerProvider.java:108] - Environment is set to [dev] by JVM system property 'env'.
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:19,454 WARN [main][DefaultMetaServerProvider.java:39] - Could not find meta server address, because it is not available in neither (1) JVM system property 'apollo.meta', (2) OS env variable 'APOLLO_META' (3) property 'apollo.meta' from server.properties nor (4) property 'apollo.meta' from app.properties
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:19,459 INFO [main][MetaDomainConsts.java:93] - Located meta server address http://localhost:8080 for env DEV from com.ctrip.framework.apollo.core.internals.LegacyMetaServerProvider
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:38,412 WARN [main][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: uaa-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:39,425 WARN [main][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: uaa-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://10.18.35.163:8080/configs/uaa-service/DEFAULT/micro_service.spring-cloud-feign?ip=10.18.35.163 [Cause: [status code: 404] Could not find config for namespace - appId: uaa-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:39,432 WARN [main][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: uaa-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:40,445 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: uaa-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://10.18.35.163:8080/configs/uaa-service/DEFAULT/micro_service.spring-cloud-feign?ip=10.18.35.163&messages=%7B%22details%22%3A%7B%22uaa-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A313%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: uaa-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:40,455 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: uaa-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:41,477 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: uaa-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:42,491 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: uaa-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://10.18.35.163:8080/configs/uaa-service/DEFAULT/micro_service.spring-cloud-feign?ip=10.18.35.163&messages=%7B%22details%22%3A%7B%22uaa-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A313%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: uaa-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:42,499 WARN [main][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: uaa-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:43,519 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: uaa-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://10.18.35.163:8080/configs/uaa-service/DEFAULT/micro_service.spring-cloud-feign?ip=10.18.35.163&messages=%7B%22details%22%3A%7B%22uaa-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A313%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: uaa-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:43,520 WARN [main][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\uaa-service\config-cache\uaa-service+DEFAULT+micro_service.spring-cloud-feign.properties]
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:43,526 WARN [main][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: uaa-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:44,533 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: uaa-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://10.18.35.163:8080/configs/uaa-service/DEFAULT/micro_service.spring-cloud-feign?ip=10.18.35.163&messages=%7B%22details%22%3A%7B%22uaa-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A313%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: uaa-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:44,534 WARN [main][DefaultConfig.java:61] - Init Apollo Local Config failed - namespace: micro_service.spring-cloud-feign, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\uaa-service\config-cache\uaa-service+DEFAULT+micro_service.spring-cloud-feign.properties].
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:44,543 WARN [main][DefaultConfig.java:95] - Could not load config for namespace micro_service.spring-cloud-feign from Apollo, please check whether the configs are released in Apollo! Return default value now!
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:44,543 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:45,642 INFO [main][RepositoryConfigurationDelegate.java:244] - Multiple Spring Data modules found, entering strict repository configuration mode!
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:45,645 INFO [main][RepositoryConfigurationDelegate.java:126] - Bootstrapping Spring Data repositories in DEFAULT mode.
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:45,698 INFO [main][RepositoryConfigurationDelegate.java:182] - Finished Spring Data repository scanning in 41ms. Found 0 repository interfaces.
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:45,795 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:45,869 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'com.ctrip.framework.apollo.spring.boot.ApolloAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:46,028 INFO [main][GenericScope.java:294] - BeanFactory id=2c4ef2eb-29cb-3881-82d6-305f8cfa2a97
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:46,050 WARN [main][PropertySourcesDeducer.java:75] - Multiple PropertySourcesPlaceholderConfigurer beans registered [propertySourcesPlaceholderConfigurer, org.springframework.context.support.PropertySourcesPlaceholderConfigurer], falling back to Environment
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:46,063 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'cn.itcast.wanxinp2p.uaa.agent.AccountApiAgent' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:46,075 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:46,151 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f740c7b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:46,176 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:46,185 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:46,193 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2b8e0f78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:46,470 INFO [main][TomcatWebServer.java:90] - Tomcat initialized with port(s): 53020 (http)
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:46,486 INFO [main][DirectJDKLog.java:173] - Initializing ProtocolHandler ["http-nio-53020"]
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:46,497 INFO [main][DirectJDKLog.java:173] - Starting service [Tomcat]
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:46,498 INFO [main][DirectJDKLog.java:173] - Starting Servlet engine: [Apache Tomcat/9.0.16]
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:46,504 INFO [main][DirectJDKLog.java:173] - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\java\javaSE1.8\jdk1.8\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;E:\VMware\bin\;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\bin;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\libnvvp;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\dotnet\;E:\opencv_4.5.0\opencv_vs2019\install\x64\vc16\bin;C:\MinGW\bin;C:\Users\yy228\Anaconda3;C:\Users\yy228\Anaconda3\Library\mingw-w64\bin;C:\Users\yy228\Anaconda3\Library\usr\bin;C:\Users\yy228\Anaconda3\Library\bin;C:\Users\yy228\Anaconda3\Scripts;C:\Program Files\NVIDIA Corporation\Nsight Compute 2019.1\;D:\java\javaSE1.8\jdk1.8\bin;D:\java\javaSE1.8\jdk1.8\jre\bin;D:\apache-maven-3.6.0\bin;C:\Program Files\Git\cmd;C:\Program Files (x86)\NetSarang\Xshell 7\;C:\Program Files (x86)\NetSarang\Xftp 7\;C:\Users\yy228\AppData\Local\Yarn\bin;C:\texlive\2022\bin\win32;C:\Program Files (x86)\Git\cmd;C:\Program Files\TortoiseGit\bin;D:\nodejs\;D:\Microsoft VS Code\bin;D:\java\javaSE1.8\jdk1.8\bin;D:\java\javaSE1.8\jdk1.8\jre\bin;C:\Users\yy228\AppData\Local\Microsoft\WindowsApps;C:\Users\yy228\.dotnet\tools;C:\Program Files\Bandizip\;C:\Program Files\CMake\bin;C:\Program Files\JetBrains\PyCharm 2020.1.3\bin;;D:\mysql\mysql-5.7.19-winx64\bin;C:\Users\yy228\AppData\Roaming\npm;D:\nodejs\node_global;D:\datagrip\DataGrip 2022.2.2\bin;;C:\Users\yy228\AppData\Local\GitHubDesktop\bin;E:\JetBrains\IntelliJ IDEA 2022.1.1\bin;;D:\VSCode\Microsoft VS Code\bin;.]
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:46,651 INFO [main][DirectJDKLog.java:173] - Initializing Spring embedded WebApplicationContext
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:46,652 INFO [main][ServletWebServerApplicationContext.java:296] - Root WebApplicationContext: initialization completed in 2094 ms
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:46,793 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:46,794 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:46,805 INFO [main][DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7507d96c
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:46,898 INFO [main][DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:47,492 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:48,489 WARN [main][JwtAccessTokenConverter.java:302] - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:48,816 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:48,817 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:48,980 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:49,686 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/public/**'], []
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:49,686 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/webjars/**'], []
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:49,687 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/v2/**'], []
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:49,687 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/swagger**'], []
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:49,687 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/static/**'], []
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:49,687 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: Ant [pattern='/resources/**'], []
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:49,733 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@659e003e, org.springframework.security.web.context.SecurityContextPersistenceFilter@3751baf6, org.springframework.security.web.header.HeaderWriterFilter@1e4b9592, org.springframework.security.web.authentication.logout.LogoutFilter@7343d843, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@7d12fb85, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@2319c1e0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3cfab56d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@12c30824, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5f3c866c, org.springframework.security.web.session.SessionManagementFilter@543c887, org.springframework.security.web.access.ExceptionTranslationFilter@211cf27b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1512efe9]
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:49,736 INFO [main][DefaultSecurityFilterChain.java:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7d6a9d5e, org.springframework.security.web.context.SecurityContextPersistenceFilter@600b3bee, org.springframework.security.web.header.HeaderWriterFilter@e21d73, org.springframework.security.web.authentication.logout.LogoutFilter@39a03ccc, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@45a05350, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@129348e8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@20ad64c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@74ed7111, org.springframework.security.web.session.SessionManagementFilter@7a482b3a, org.springframework.security.web.access.ExceptionTranslationFilter@66428512, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@42684d86]
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:49,915 INFO [main][EndpointLinksResolver.java:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:50,634 INFO [main][InstanceInfoFactory.java:71] - Setting initial instance status as: STARTING
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:50,670 INFO [main][DiscoveryClient.java:349] - Initializing Eureka in region us-east-1
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:50,792 INFO [main][DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:50,792 INFO [main][DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:50,918 INFO [main][DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:50,918 INFO [main][DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:51,222 INFO [main][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:51,598 INFO [main][DiscoveryClient.java:958] - Disable delta property : false
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:51,598 INFO [main][DiscoveryClient.java:959] - Single vip registry refresh property : null
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:51,599 INFO [main][DiscoveryClient.java:960] - Force full registry fetch : false
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:51,599 INFO [main][DiscoveryClient.java:961] - Application is null : false
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:51,599 INFO [main][DiscoveryClient.java:962] - Registered Applications size is zero : true
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:51,599 INFO [main][DiscoveryClient.java:964] - Application version is -1: true
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:51,599 INFO [main][DiscoveryClient.java:1047] - Getting all instance registry info from the eureka server
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:51,791 INFO [main][DiscoveryClient.java:1056] - The response status is 200
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:51,794 INFO [main][DiscoveryClient.java:1270] - Starting heartbeat executor: renew interval is: 30
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:51,797 INFO [main][InstanceInfoReplicator.java:60] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:51,801 INFO [main][DiscoveryClient.java:449] - Discovery Client initialized at timestamp 1685544411800 with initial instances count: 3
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:51,803 INFO [main][EurekaServiceRegistry.java:42] - Registering application UAA-SERVICE with eureka with status UP
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:51,804 INFO [main][DiscoveryClient.java:1305] - Saw local status change event StatusChangeEvent [timestamp=1685544411803, current=UP, previous=STARTING]
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:51,807 INFO [DiscoveryClient-InstanceInfoReplicator-0][DiscoveryClient.java:826] - DiscoveryClient_UAA-SERVICE/uaa-service:10.18.35.163:53020: registering service...
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:51,821 INFO [main][DirectJDKLog.java:173] - Starting ProtocolHandler ["http-nio-53020"]
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:51,849 INFO [DiscoveryClient-InstanceInfoReplicator-0][DiscoveryClient.java:835] - DiscoveryClient_UAA-SERVICE/uaa-service:10.18.35.163:53020 - registration status: 204
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:51,850 INFO [main][TomcatWebServer.java:204] - Tomcat started on port(s): 53020 (http) with context path '/uaa'
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:51,852 INFO [main][EurekaAutoServiceRegistration.java:141] - Updating port to 53020
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:51,854 INFO [main][StartupInfoLogger.java:59] - Started UAAServer in 37.109 seconds (JVM running for 39.516)
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:52,414 INFO [RMI TCP Connection(6)-192.168.101.1][DirectJDKLog.java:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:52,415 INFO [RMI TCP Connection(6)-192.168.101.1][FrameworkServlet.java:524] - Initializing Servlet 'dispatcherServlet'
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:52,427 INFO [RMI TCP Connection(6)-192.168.101.1][FrameworkServlet.java:546] - Completed initialization in 12 ms
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:52,772 INFO [RMI TCP Connection(5)-192.168.101.1][EpollProvider.java:68] - Starting without optional epoll library
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:46:52,777 INFO [RMI TCP Connection(5)-192.168.101.1][KqueueProvider.java:70] - Starting without optional kqueue library
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:51:39,441 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: uaa-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:51:40,458 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: uaa-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://10.18.35.163:8080/configs/uaa-service/DEFAULT/micro_service.spring-cloud-feign?ip=10.18.35.163&messages=%7B%22details%22%3A%7B%22uaa-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A313%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: uaa-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:51:51,608 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:56:39,440 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: uaa-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:56:40,459 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: uaa-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://10.18.35.163:8080/configs/uaa-service/DEFAULT/micro_service.spring-cloud-feign?ip=10.18.35.163&messages=%7B%22details%22%3A%7B%22uaa-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A313%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: uaa-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:56:44,477 WARN [http-nio-53020-exec-1][DefaultConfig.java:95] - Could not load config for namespace micro_service.spring-cloud-feign from Apollo, please check whether the configs are released in Apollo! Return default value now!
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:56:44,849 INFO [http-nio-53020-exec-1][ChainedDynamicProperty.java:115] - Flipping property: account-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:56:44,879 INFO [http-nio-53020-exec-1][ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-account-service
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:56:44,880 INFO [http-nio-53020-exec-1][BaseLoadBalancer.java:197] - Client: account-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=account-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:56:44,888 INFO [http-nio-53020-exec-1][DynamicServerListLoadBalancer.java:222] - Using serverListUpdater PollingServerListUpdater
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:56:44,910 INFO [http-nio-53020-exec-1][ChainedDynamicProperty.java:115] - Flipping property: account-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:56:44,913 INFO [http-nio-53020-exec-1][DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client account-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=account-service,current list of Servers=[10.18.35.163:53030],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:10.18.35.163:53030;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@54e302f8
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:56:45,905 INFO [PollingServerListUpdater-0][ChainedDynamicProperty.java:115] - Flipping property: account-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[wanxinp2p-uaa-service][${env:SERVER_PORT}] 2023-05-31 22:56:51,620 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
